{"version":3,"file":"4.D_p4pj2X.js","sources":["../../../../../../src/routes/recipe/+page.svelte"],"sourcesContent":["<script>\r\nimport axios from \"axios\";\r\n\r\nconst api_root = \"http://localhost:8080/api\"; \r\nimport { onMount } from \"svelte\";\r\nimport { jwt_token } from \"../../store\";\r\n\r\n\r\n\r\nlet recipes = [];\r\nlet recipe = {\r\n  name: null,\r\n  ingredients: null,\r\n  calories: null,\r\n  \r\n};\r\n\r\n// Fetch all recipes on mount\r\nonMount(() => {\r\n  getRecipes();\r\n});\r\n\r\n// Get all recipes\r\nfunction getRecipes() {\r\n  var config = {\r\n    method: \"get\",\r\n    url: api_root + \"/recipe\",\r\n    headers: {},\r\n  };\r\n\r\n  axios(config)\r\n    .then(function (response) {\r\n      recipes = response.data;\r\n    })\r\n    .catch(function (error) {\r\n      alert(\"Could not fetch recipe\");\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nfunction createRecipe() {\r\n// Zutaten-String in ein Array umwandeln\r\nconst formattedIngredients = recipe.ingredients\r\n  ? recipe.ingredients.split(\",\").map(item => item.trim())\r\n  : [];\r\n\r\nconst newRecipe = {\r\n  name: recipe.name || \"\",\r\n  ingredients: formattedIngredients,\r\n  calories: parseInt(recipe.calories, 10) || 0,\r\n};\r\n\r\n// Verwende axios.post direkt\r\naxios.post(api_root + \"/recipe\", newRecipe, {\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n})\r\n  .then(function (response) {\r\n    alert(\"Recipe created successfully\");\r\n    recipe = { name: \"\", ingredients: \"\", calories: \"\" }; // Formular zur√ºcksetzen\r\n    getRecipes(); // Rezepte neu laden\r\n  })\r\n  .catch(function (error) {\r\n    alert(\"Could not create recipe\");\r\n    console.error(\"Error:\", error);\r\n  });\r\n}\r\n\r\n</script>\r\n\r\n<h1 class=\"mt-3\">Create Recipe</h1>\r\n<form class=\"mb-5\">\r\n<div class=\"row mb-3\">\r\n  <div class=\"col\">\r\n    <label class=\"form-label\" for=\"name\">Name</label>\r\n    <input\r\n      bind:value={recipe.name}\r\n      class=\"form-control\"\r\n      id=\"name\"\r\n      type=\"text\"\r\n    />\r\n  </div>\r\n  <div class=\"col\">\r\n    <label class=\"form-label\" for=\"ingredients\">Ingredients (comma-separated)</label>\r\n    <input\r\n      bind:value={recipe.ingredients}\r\n      class=\"form-control\"\r\n      id=\"ingredients\"\r\n      type=\"text\"\r\n    />\r\n  </div>\r\n</div>\r\n<div class=\"row mb-3\">\r\n  <div class=\"col\">\r\n    <label class=\"form-label\" for=\"calories\">Calories</label>\r\n    <input\r\n      bind:value={recipe.calories}\r\n      class=\"form-control\"\r\n      id=\"calories\"\r\n      type=\"number\"\r\n    />\r\n  </div>  \r\n</div>\r\n\r\n<button type=\"button\" class=\"btn btn-primary\" on:click={createRecipe}>\r\n  Submit\r\n</button>\r\n</form>\r\n\r\n<h1>All Recipes</h1>\r\n<table class=\"table\">\r\n<thead>\r\n  <tr>\r\n    <th scope=\"col\">Name</th>\r\n    <th scope=\"col\">Ingredients</th>\r\n    <th scope=\"col\">Calories</th>\r\n    \r\n  </tr>\r\n</thead>\r\n<tbody>\r\n  {#each recipes as recipe}\r\n    <tr>\r\n      <td>{recipe.name}</td>\r\n      <td>{recipe.ingredients ? recipe.ingredients.join(\", \") : \"\"}</td>\r\n      <td>{recipe.calories}</td>\r\n      \r\n    </tr>\r\n  {/each}\r\n</tbody>\r\n</table>"],"names":["t0_value","ctx","t2_value","t4_value","insert_hydration","target","tr","anchor","append_hydration","td0","td1","td2","dirty","set_data","t0","t2","t4","i","h10","form","div2","div0","label0","input0","set_input_value","div1","label1","input1","div4","div3","label2","input2","button","h11","table","thead","tbody","to_number","api_root","recipes","recipe","onMount","getRecipes","config","axios","response","error","createRecipe","formattedIngredients","item","newRecipe"],"mappings":"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"}