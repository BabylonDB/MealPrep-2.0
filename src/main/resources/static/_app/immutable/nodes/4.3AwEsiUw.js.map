{"version":3,"file":"4.3AwEsiUw.js","sources":["../../../../../../src/routes/mealplan/+page.svelte"],"sourcesContent":["<script>\n  import axios from \"axios\";\n  import { onMount } from \"svelte\";\n  import { jwt_token } from \"../../store\";\n  import { page } from \"$app/stores\";\n\n  const api_root = `${$page.url.origin}/api`;\n\n\n  let mealPlans = [];\n  let selectedMealPlan = null; // Für die Auswahl eines spezifischen MealPlans\n  let recipesForSelectedMealPlan = []; // Rezeptdetails für den ausgewählten MealPlan\n  let isLoading = false;\n  let errorMessage = \"\";\n\n  // JWT-Token debuggen (nur zu Debugging-Zwecken hinzufügen)\n  console.log(\"JWT Token:\", $jwt_token);\n\n  // Token dekodieren (optional, falls Debugging erforderlich ist)\n  // import jwt_decode from \"jwt-decode\";\n  // const decodedToken = jwt_decode($jwt_token);\n  // console.log(\"Decoded Token:\", decodedToken);\n\n  // MealPlans beim Laden der Seite abrufen\n  onMount(() => {\n    fetchMealPlans();\n  });\n\n  // MealPlans abrufen\n  async function fetchMealPlans() {\n    isLoading = true;\n    errorMessage = \"\";\n    try {\n      const response = await axios.get(`${api_root}/mealplan`, {\n        headers: { Authorization: \"Bearer \" + $jwt_token },\n      });\n      mealPlans = response.data;\n    } catch (error) {\n      if (error.response) {\n        if (error.response.status === 401) {\n          errorMessage = \"Unauthorized. Please check your login.\";\n        } else if (error.response.status === 403) {\n          errorMessage = \"Forbidden. You do not have access.\";\n        } else {\n          errorMessage = \"Error fetching meal plans: \" + error.response.data;\n        }\n      } else {\n        errorMessage = \"Network error or server not reachable.\";\n      }\n      console.error(\"Error fetching meal plans:\", error);\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  // Rezepte für einen ausgewählten MealPlan abrufen\n  async function fetchRecipesForMealPlan(mealPlanId) {\n    isLoading = true;\n    errorMessage = \"\";\n    recipesForSelectedMealPlan = [];\n    try {\n      const response = await axios.get(`${api_root}/mealplan/${mealPlanId}/recipes`, {\n        headers: { Authorization: \"Bearer \" + $jwt_token },\n      });\n      recipesForSelectedMealPlan = response.data;\n      selectedMealPlan = mealPlans.find((plan) => plan.id === mealPlanId);\n    } catch (error) {\n      if (error.response) {\n        if (error.response.status === 401) {\n          errorMessage = \"Unauthorized. Please check your login.\";\n        } else if (error.response.status === 403) {\n          errorMessage = \"Forbidden. You do not have access.\";\n        } else {\n          errorMessage = \"Error fetching recipes: \" + error.response.data;\n        }\n      } else {\n        errorMessage = \"Network error or server not reachable.\";\n      }\n      console.error(\"Error fetching recipes for meal plan:\", error);\n    } finally {\n      isLoading = false;\n    }\n  }\n  \n</script>\n\n<h1 class=\"mt-3\">Meal Plans</h1>\n\n{#if isLoading}\n  <div class=\"spinner-border text-primary\" role=\"status\">\n    <span class=\"visually-hidden\">Loading...</span>\n  </div>\n{:else if errorMessage}\n  <div class=\"alert alert-danger\">{errorMessage}</div>\n{:else}\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Meal Plan Name</th>\n        <th scope=\"col\">Description</th>\n        <th scope=\"col\">Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {#each mealPlans as mealPlan}\n        <tr>\n          <td>{mealPlan.name}</td>\n          <td>{mealPlan.description}</td>\n          <td>\n            <button\n              class=\"btn btn-primary btn-sm\"\n              on:click={() => fetchRecipesForMealPlan(mealPlan.id)}\n            >\n              View Recipes\n            </button>\n          </td>\n        </tr>\n      {/each}\n    </tbody>\n  </table>\n{/if}\n\n{#if selectedMealPlan}\n  <h2 class=\"mt-4\">Recipes for \"{selectedMealPlan.name}\"</h2>\n  <p>{selectedMealPlan.description}</p>\n\n  {#if recipesForSelectedMealPlan.length > 0}\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Recipe Name</th>\n          <th scope=\"col\">Ingredients</th>\n          <th scope=\"col\">Calories</th>\n        </tr>\n      </thead>\n      <tbody>\n        {#each recipesForSelectedMealPlan as recipe}\n          <tr>\n            <td>{recipe.name}</td>\n            <td>{recipe.ingredients.join(\", \")}</td>\n            <td>{recipe.calories}</td>\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n  {:else}\n    <p>No recipes found for this meal plan.</p>\n  {/if}\n{/if}\n"],"names":["ctx","i","insert_hydration","target","table","anchor","append_hydration","thead","tbody","div","t0_value","t2_value","tr","td0","td1","td2","button","dirty","set_data","t0","t2","t1_value","t4_value","create_if_block_1","h2","p","t1","t4","create_if_block_2","create_if_block_3","create_if_block","h1","api_root","$page","mealPlans","selectedMealPlan","recipesForSelectedMealPlan","isLoading","errorMessage","$jwt_token","onMount","fetchMealPlans","$$invalidate","response","axios","error","fetchRecipesForMealPlan","mealPlanId","plan","mealPlan"],"mappings":"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"}