{"version":3,"file":"6.DKSnMDNL.js","sources":["../../../../../../src/routes/shoppinglist/+page.svelte"],"sourcesContent":["<script>\r\n    import axios from \"axios\";\r\n    import { onMount } from \"svelte\";\r\n    import { jwt_token } from \"../../store\"; \r\n\r\n    import { page } from \"$app/stores\";\r\n\r\nconst api_root = `${$page.url.origin}/api`;\r\n\r\n    let recipes = [];\r\n    let selectedRecipeId = null;\r\n    let ingredients = [];\r\n    let isLoading = false;\r\n    let errorMessage = \"\";\r\n    let mealPlans = [];\r\n    let selectedMealPlanId = null;\r\n    let shoppingList = [];\r\n    let recipesForSelectedMealPlan = [];\r\n    let mapDiv; // Referenz für die Map\r\n\r\n    // Fetch all recipes\r\n    async function getRecipes() {\r\n        isLoading = true;\r\n        errorMessage = \"\";\r\n        try {\r\n            const response = await axios.get(`${api_root}/recipe`, {\r\n                headers: { Authorization: \"Bearer \" + $jwt_token },\r\n            });\r\n            recipes = response.data;\r\n            console.log('Fetched recipes:', recipes);\r\n        } catch (error) {\r\n            errorMessage = \"Could not fetch recipes.\";\r\n            console.error(error);\r\n        } finally {\r\n            isLoading = false;\r\n        }\r\n    }\r\n\r\n    // Fetch all meal plans\r\n    async function getMealPlans() {\r\n        isLoading = true;\r\n        errorMessage = \"\";\r\n        try {\r\n            const response = await axios.get(`${api_root}/mealplan`, {\r\n                headers: { Authorization: \"Bearer \" + $jwt_token },\r\n            });\r\n            mealPlans = response.data;\r\n            console.log('Fetched meal plans:', mealPlans);\r\n            console.log('Selected Meal Plan ID:', selectedMealPlanId);\r\n        } catch (error) {\r\n            errorMessage = \"Could not fetch meal plans.\";\r\n            console.error(error);\r\n        } finally {\r\n            isLoading = false;\r\n        }\r\n    }\r\n\r\n    // Fetch recipes for a selected meal plan\r\n    async function fetchRecipesForMealPlan(mealPlanId) {\r\n        console.log('hELLOR');\r\n        isLoading = true;\r\n        errorMessage = \"\";\r\n        recipesForSelectedMealPlan = [];\r\n        try {\r\n            const response = await axios.get(`${api_root}/mealplan/${mealPlanId}/recipes`, {\r\n                headers: { Authorization: \"Bearer \" + $jwt_token },\r\n            });\r\n            recipesForSelectedMealPlan = response.data;\r\n            console.log('Fetched recipes for selected meal plan:', recipesForSelectedMealPlan);\r\n            ingredients = recipesForSelectedMealPlan.flatMap(recipe => recipe.ingredients);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                if (error.response.status === 401) {\r\n                    errorMessage = \"Unauthorized. Please check your login.\";\r\n                } else if (error.response.status === 403) {\r\n                    errorMessage = \"Forbidden. You do not have access.\";\r\n                } else {\r\n                    errorMessage = \"Error fetching recipes: \" + error.response.data;\r\n                }\r\n            } else {\r\n                errorMessage = \"Network error or server not reachable.\";\r\n            }\r\n            console.error(\"Error fetching recipes for meal plan:\", error);\r\n        } finally {\r\n            isLoading = false;\r\n        }\r\n    }\r\n\r\n    // Initialize Google Maps\r\n    function initializeMap() {\r\n    if (mapDiv) {\r\n        new google.maps.Map(mapDiv, {\r\n            center: { lat: 47.4988, lng: 8.7241 }, // Koordinaten für Winterthur, Schweiz\r\n            zoom: 15, // Zoom-Level\r\n        });\r\n    } else {\r\n        console.error(\"Map container not found\");\r\n    }\r\n}\r\n\r\n    // Load Google Maps API and initialize the map\r\n    onMount(() => {\r\n        const script = document.createElement('script');\r\n        script.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAZmEp7aVY1dFCvVMtH-i1Z2-1pgB-fX5o`;\r\n        script.async = true;\r\n        script.defer = true;\r\n        script.onload = initializeMap;\r\n        document.head.appendChild(script);\r\n    });\r\n\r\n    // Fetch recipes and meal plans on component mount\r\n    onMount(() => {\r\n        getRecipes();\r\n        getMealPlans();\r\n    });\r\n</script>\r\n\r\n<h1>Shopping List Manager</h1>\r\n\r\n{#if isLoading}\r\n    <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">Loading...</span>\r\n    </div>\r\n{:else}\r\n    {#if errorMessage}\r\n        <div class=\"alert alert-danger\">{errorMessage}</div>\r\n        {/if}\r\n    {/if}\r\n\r\n    <div class=\"mb-4\">\r\n        <label for=\"mealPlanSelector\" class=\"form-label\">Select a Meal Plan</label>\r\n        <select\r\n            id=\"mealPlanSelector\"\r\n            class=\"form-select\"\r\n            bind:value={selectedMealPlanId}\r\n            on:change={() => {\r\n                console.log('Dropdown changed, selectedMealPlanId:', selectedMealPlanId);\r\n                if (selectedMealPlanId) {\r\n                    fetchRecipesForMealPlan(selectedMealPlanId);\r\n                }\r\n            }}\r\n        >\r\n            <option value=\"\" disabled selected={selectedMealPlanId === null}>Choose a Meal Plan</option>\r\n            {#each mealPlans as mealPlan}\r\n                <option value={mealPlan.id}>{mealPlan.name}</option>\r\n            {/each}\r\n        </select>\r\n    </div>\r\n\r\n    {#if ingredients.length > 0}\r\n        <h2>Ingredients</h2>\r\n        <ul class=\"list-group\">\r\n            {#each ingredients as ingredient}\r\n                <li class=\"list-group-item\">{ingredient}</li>\r\n            {/each}\r\n        </ul>\r\n    {:else}\r\n        <p>No ingredients found for the selected Meal Plan.</p>\r\n    {/if}\r\n\r\n    <!-- Google Maps Integration -->\r\n    <h2>Supermarkt</h2>\r\n    <div id=\"map\" bind:this={mapDiv}></div>\r\n\r\n<style>\r\n    #map {\r\n        width: 100%;\r\n        height: 400px;\r\n        margin-top: 20px;\r\n        border: 1px solid #ccc;\r\n        border-radius: 5px;\r\n    }\r\n</style>\r\n"],"names":["ctx","insert_hydration","target","div","anchor","t_value","option","option_value_value","dirty","set_data","t","p","i","h2","ul","li","create_if_block_1","create_if_block_2","create_if_block","option_selected_value","add_render_callback","select","h1","div0","append_hydration","label","div1","api_root","$page","recipes","ingredients","isLoading","errorMessage","mealPlans","selectedMealPlanId","recipesForSelectedMealPlan","mapDiv","getRecipes","$$invalidate","axios","$jwt_token","error","getMealPlans","response","fetchRecipesForMealPlan","mealPlanId","recipe","initializeMap","onMount","script","select_value","$$value"],"mappings":"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"}