{"version":3,"file":"5.O-oRAg-p.js","sources":["../../../../../../src/routes/recipe/+page.svelte"],"sourcesContent":["<script>\n  import axios from \"axios\";\n  import { jwt_token } from \"../../store\"; \n  const api_root = \"http://localhost:8080/api\"; \n  import { onMount } from \"svelte\";\n  \n  let recipes = [];\n  let recipe = {\n    name: null,\n    ingredients: null,\n    calories: null,\n  };\n  \n  // Fetch all recipes on mount\n  onMount(() => {\n    getRecipes();\n  });\n  \n  // Get all recipes\n  function getRecipes() {\n    var config = {\n      method: \"get\",\n      url: api_root + \"/recipe\",\n      headers: { Authorization: \"Bearer \" + $jwt_token },\n    };\n  \n    axios(config)\n      .then(function (response) {\n        recipes = response.data;\n      })\n      .catch(function (error) {\n        alert(\"Could not fetch recipe\");\n        console.log(error);\n      });\n  }\n  \n  function createRecipe() {\n    // Zutaten-String in ein Array umwandeln\n    const formattedIngredients = recipe.ingredients\n      ? recipe.ingredients.split(\",\").map(item => item.trim())\n      : [];\n  \n    const newRecipe = {\n      name: recipe.name || \"\",\n      ingredients: formattedIngredients,\n      calories: parseInt(recipe.calories, 10) || 0,\n    };\n  \n    // Verwende axios.post direkt\n    axios.post(api_root + \"/recipe\", newRecipe, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + $jwt_token,\n      },\n    })\n      .then(function (response) {\n        alert(\"Recipe created successfully\");\n        recipe = { name: \"\", ingredients: \"\", calories: \"\" }; // Formular zur√ºcksetzen\n        getRecipes(); // Rezepte neu laden\n      })\n      .catch(function (error) {\n        alert(\"Could not create recipe\");\n        console.error(\"Error:\", error);\n      });\n  }\n  \n  </script>\n  \n  <h1 class=\"mt-3\">Create Recipe</h1>\n  <form class=\"mb-5\">\n  <div class=\"row mb-3\">\n    <div class=\"col\">\n      <label class=\"form-label\" for=\"name\">Name</label>\n      <input\n        bind:value={recipe.name}\n        class=\"form-control\"\n        id=\"name\"\n        type=\"text\"\n      />\n    </div>\n    <div class=\"col\">\n      <label class=\"form-label\" for=\"ingredients\">Ingredients (comma-separated)</label>\n      <input\n        bind:value={recipe.ingredients}\n        class=\"form-control\"\n        id=\"ingredients\"\n        type=\"text\"\n      />\n    </div>\n  </div>\n  <div class=\"row mb-3\">\n    <div class=\"col\">\n      <label class=\"form-label\" for=\"calories\">Calories</label>\n      <input\n        bind:value={recipe.calories}\n        class=\"form-control\"\n        id=\"calories\"\n        type=\"number\"\n      />\n    </div>  \n  </div>\n  \n  <button type=\"button\" class=\"btn btn-primary\" on:click={createRecipe}>\n    Submit\n  </button>\n  </form>\n  \n  <h1>All Recipes</h1>\n  <table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Ingredients</th>\n      <th scope=\"col\">Calories</th>\n    </tr>\n  </thead>\n  <tbody>\n    {#each recipes as recipe}\n      <tr>\n        <td>{recipe.name}</td>\n        <td>{recipe.ingredients ? recipe.ingredients.join(\", \") : \"\"}</td>\n        <td>{recipe.calories}</td>\n      </tr>\n    {/each}\n  </tbody>\n  </table>\n  "],"names":["t0_value","ctx","t2_value","t4_value","insert_hydration","target","tr","anchor","append_hydration","td0","td1","td2","dirty","set_data","t0","t2","t4","i","h10","form","div2","div0","label0","input0","set_input_value","div1","label1","input1","div4","div3","label2","input2","button","h11","table","thead","tbody","to_number","api_root","recipes","recipe","onMount","getRecipes","config","$jwt_token","axios","response","error","createRecipe","formattedIngredients","item","newRecipe"],"mappings":"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"}