{"version":3,"file":"5.C7U_QTTe.js","sources":["../../../../../../src/routes/recipe/+page.svelte"],"sourcesContent":["<script>\r\n  import axios from \"axios\";\r\n  import { jwt_token } from \"../../store\"; \r\n  import { onMount } from \"svelte\";\r\n  import { page } from \"$app/stores\";\r\n\r\n  const api_root = `${$page.url.origin}/api`;\r\n\r\n  let recipes = [];\r\n  let recipe = {\r\n    name: null,\r\n    ingredients: null,\r\n    calories: null,\r\n  };\r\n\r\n  let editRecipeId = null; // ID des zu bearbeitenden Rezepts\r\n\r\n  // Fetch all recipes on mount\r\n  onMount(() => {\r\n    getRecipes();\r\n  });\r\n\r\n  // Get all recipes\r\n  function getRecipes() {\r\n    var config = {\r\n      method: \"get\",\r\n      url: api_root + \"/recipe\",\r\n      headers: { Authorization: \"Bearer \" + $jwt_token },\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        recipes = response.data;\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Could not fetch recipes\");\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  function createRecipe() {\r\n    const formattedIngredients = recipe.ingredients\r\n      ? recipe.ingredients.split(\",\").map(item => item.trim())\r\n      : [];\r\n\r\n    const newRecipe = {\r\n      name: recipe.name || \"\",\r\n      ingredients: formattedIngredients,\r\n      calories: parseInt(recipe.calories, 10) || 0,\r\n    };\r\n\r\n    axios.post(api_root + \"/recipe\", newRecipe, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + $jwt_token,\r\n      },\r\n    })\r\n      .then(function () {\r\n        alert(\"Recipe created successfully\");\r\n        recipe = { name: \"\", ingredients: \"\", calories: \"\" };\r\n        getRecipes();\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"Could not create recipe\");\r\n        console.error(\"Error:\", error);\r\n      });\r\n  }\r\n\r\n  function deleteRecipe(id) {\r\n    axios.delete(`${api_root}/recipe/${id}`, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + $jwt_token,\r\n      },\r\n    })\r\n      .then(() => {\r\n        alert(\"Recipe deleted successfully\");\r\n        getRecipes();\r\n      })\r\n      .catch(error => {\r\n        alert(\"Could not delete recipe\");\r\n        console.error(\"Error:\", error);\r\n      });\r\n  }\r\n\r\n  function editRecipe(recipeToEdit) {\r\n    editRecipeId = recipeToEdit.id;\r\n    recipe = {\r\n      name: recipeToEdit.name,\r\n      ingredients: recipeToEdit.ingredients.join(\", \"),\r\n      calories: recipeToEdit.calories,\r\n    };\r\n  }\r\n\r\n  function updateRecipe() {\r\n    const formattedIngredients = recipe.ingredients\r\n      ? recipe.ingredients.split(\",\").map(item => item.trim())\r\n      : [];\r\n\r\n    const updatedRecipe = {\r\n      name: recipe.name || \"\",\r\n      ingredients: formattedIngredients,\r\n      calories: parseInt(recipe.calories, 10) || 0,\r\n    };\r\n\r\n    axios.put(`${api_root}/recipe/${editRecipeId}`, updatedRecipe, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + $jwt_token,\r\n      },\r\n    })\r\n      .then(() => {\r\n        alert(\"Recipe updated successfully\");\r\n        recipe = { name: \"\", ingredients: \"\", calories: \"\" };\r\n        editRecipeId = null;\r\n        getRecipes();\r\n      })\r\n      .catch(error => {\r\n        alert(\"Could not update recipe\");\r\n        console.error(\"Error:\", error);\r\n      });\r\n  }\r\n</script>\r\n\r\n<h1 class=\"mt-3\">{editRecipeId ? \"Edit Recipe\" : \"Create Recipe\"}</h1>\r\n<form class=\"mb-5\">\r\n  <div class=\"row mb-3\">\r\n    <div class=\"col\">\r\n      <label class=\"form-label\" for=\"name\">Name</label>\r\n      <input\r\n        bind:value={recipe.name}\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        type=\"text\"\r\n      />\r\n    </div>\r\n    <div class=\"col\">\r\n      <label class=\"form-label\" for=\"ingredients\">Ingredients (comma-separated)</label>\r\n      <input\r\n        bind:value={recipe.ingredients}\r\n        class=\"form-control\"\r\n        id=\"ingredients\"\r\n        type=\"text\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"row mb-3\">\r\n    <div class=\"col\">\r\n      <label class=\"form-label\" for=\"calories\">Calories</label>\r\n      <input\r\n        bind:value={recipe.calories}\r\n        class=\"form-control\"\r\n        id=\"calories\"\r\n        type=\"number\"\r\n      />\r\n    </div>  \r\n  </div>\r\n\r\n  <button type=\"button\" class=\"btn btn-primary\" on:click={editRecipeId ? updateRecipe : createRecipe}>\r\n    {editRecipeId ? \"Update\" : \"Submit\"}\r\n  </button>\r\n</form>\r\n\r\n<h1>All Recipes</h1>\r\n<table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Name</th>\r\n      <th scope=\"col\">Ingredients</th>\r\n      <th scope=\"col\">Calories</th>\r\n      <th scope=\"col\">Actions</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {#each recipes as recipe}\r\n      <tr>\r\n        <td>{recipe.name}</td>\r\n        <td>{recipe.ingredients ? recipe.ingredients.join(\", \") : \"\"}</td>\r\n        <td>{recipe.calories}</td>\r\n        <td>\r\n          <button class=\"btn btn-secondary btn-sm\" on:click={() => editRecipe(recipe)}>Edit</button>\r\n          <button class=\"btn btn-danger btn-sm\" on:click={() => deleteRecipe(recipe.id)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    {/each}\r\n  </tbody>\r\n</table>\r\n"],"names":["t0_value","ctx","t2_value","t4_value","insert_hydration","target","tr","anchor","append_hydration","td0","td1","td2","td3","button0","button1","dirty","set_data","t0","t2","t4","i","h10","form","div2","div0","label0","input0","set_input_value","div1","label1","input1","div4","div3","label2","input2","button","h11","table","thead","tbody","to_number","t11","t11_value","api_root","$page","recipes","recipe","editRecipeId","onMount","getRecipes","config","$jwt_token","axios","response","error","createRecipe","formattedIngredients","item","newRecipe","deleteRecipe","id","editRecipe","recipeToEdit","updateRecipe","updatedRecipe","$$invalidate"],"mappings":"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"}